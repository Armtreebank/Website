# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-11-03 17:02
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bibliography', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Adj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree', models.CharField(blank=True, choices=[('pos', 'Positive'), ('sup', 'Superlative')], max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Adv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Intj',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_sym', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Noun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('declension_type', models.CharField(blank=True, max_length=25)),
                ('declension', models.CharField(blank=True, choices=[('nominative', 'Nominative'), ('dative', 'Dative'), ('ablative', 'Ablative'), ('instrumental', 'Instrumental'), ('locative', 'Locative')], max_length=20)),
                ('quantity_type', models.CharField(blank=True, choices=[('', '-'), ('եր', '-եր'), ('ներ', '-ներ')], max_length=10)),
                ('definite', models.CharField(blank=True, choices=[('empty', 'Empty'), ('def', 'Definite'), ('indef', 'Indefinite')], max_length=8)),
                ('quantity', models.CharField(blank=True, choices=[('singular', 'Singular'), ('plural', 'Plural'), ('collective', 'Collective'), ('assocpl', 'Associative')], max_length=15)),
                ('oblique_stem', models.CharField(blank=True, max_length=256)),
                ('singular_stem', models.CharField(blank=True, max_length=256)),
                ('proper', models.BooleanField(default=False)),
                ('materiality', models.CharField(blank=True, choices=[('conc', 'concrete'), ('astr', 'abstract')], max_length=10)),
                ('nominalized', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='NounAnimacy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=20)),
                ('value', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='NounState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.CharField(max_length=5)),
                ('state', models.CharField(blank=True, max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Punct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('sentence', models.TextField()),
                ('position', models.IntegerField()),
                ('text', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bibliography.Text')),
            ],
        ),
        migrations.CreateModel(
            name='Sym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('token', models.CharField(max_length=250)),
                ('position', models.CharField(max_length=5)),
                ('checked', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Verb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ending', models.CharField(blank=True, max_length=250)),
                ('root', models.CharField(blank=True, max_length=250)),
                ('type', models.CharField(blank=True, max_length=250)),
                ('form', models.CharField(blank=True, max_length=250)),
                ('quantity', models.CharField(blank=True, choices=[(1, 'Singular'), (2, 'Plural')], max_length=10)),
                ('demq', models.CharField(blank=True, choices=[(1, 'First'), (2, 'Second'), (3, 'Third')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('pos', models.CharField(blank=True, choices=[('noun', 'Noun'), ('verb', 'Verb'), ('punct', 'Punct'), ('sym', 'Sym'), ('det', 'Det'), ('intj', 'Interjection'), ('adj', 'Adjective'), ('adv', 'Adverb')], max_length=25)),
                ('word', models.CharField(max_length=250)),
                ('lemma', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='w_lemma', to='tokenization.Word')),
            ],
        ),
        migrations.AddField(
            model_name='verb',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='v_parent', to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='token',
            name='selected_tag',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='selected_tag', to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='token',
            name='sentence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Sentence'),
        ),
        migrations.AddField(
            model_name='token',
            name='tag',
            field=models.ManyToManyField(blank=True, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='sym',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='punct',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='nounstate',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='noun',
            name='animacy',
            field=models.ManyToManyField(blank=True, to='tokenization.NounAnimacy'),
        ),
        migrations.AddField(
            model_name='noun',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='n_parent', to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='intj',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='adv',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
        migrations.AddField(
            model_name='adj',
            name='parent',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tokenization.Word'),
        ),
    ]
